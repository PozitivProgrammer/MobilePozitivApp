//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Этот исходный текст был создан автоматически: Microsoft.VSDesigner, версия: 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace MobilePozitivApp.MobileAppPozitiv {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MobileAppPozitivSoapBinding", Namespace="http://1c.pozitivtelecom.ru")]
    public partial class MobileAppPozitiv : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllowGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllowElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataByRefOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDataByRefOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPeriodicDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMessageOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MobileAppPozitiv() {
            this.Url = "http://1c.pozitivtelecom.ru/SkladPozitiv/ws/app.1cws";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InitCompletedEventHandler InitCompleted;
        
        /// <remarks/>
        public event GetAllowGroupsCompletedEventHandler GetAllowGroupsCompleted;
        
        /// <remarks/>
        public event GetAllowElementsCompletedEventHandler GetAllowElementsCompleted;
        
        /// <remarks/>
        public event GetDataListCompletedEventHandler GetDataListCompleted;
        
        /// <remarks/>
        public event GetDataByRefCompletedEventHandler GetDataByRefCompleted;
        
        /// <remarks/>
        public event SetDataByRefCompletedEventHandler SetDataByRefCompleted;
        
        /// <remarks/>
        public event InitAppCompletedEventHandler InitAppCompleted;
        
        /// <remarks/>
        public event GetPeriodicDataCompletedEventHandler GetPeriodicDataCompleted;
        
        /// <remarks/>
        public event GetNewsCompletedEventHandler GetNewsCompleted;
        
        /// <remarks/>
        public event GetGroupsCompletedEventHandler GetGroupsCompleted;
        
        /// <remarks/>
        public event GetElementsCompletedEventHandler GetElementsCompleted;
        
        /// <remarks/>
        public event GetListCompletedEventHandler GetListCompleted;
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event SetDataCompletedEventHandler SetDataCompleted;
        
        /// <remarks/>
        public event GetFileCompletedEventHandler GetFileCompleted;
        
        /// <remarks/>
        public event SetFileCompletedEventHandler SetFileCompleted;
        
        /// <remarks/>
        public event GetMessageCompletedEventHandler GetMessageCompleted;
        
        /// <remarks/>
        public event SetMessageCompletedEventHandler SetMessageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://1c.pozitivtelecom.ru#MobileAppPozitiv:Init", RequestNamespace="http://1c.pozitivtelecom.ru", ResponseNamespace="http://1c.pozitivtelecom.ru", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string Init() {
            object[] results = this.Invoke("Init", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InitAsync() {
            this.InitAsync(null);
        }
        
        /// <remarks/>
        public void InitAsync(object userState) {
            if ((this.InitOperationCompleted == null)) {
                this.InitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitOperationCompleted);
            }
            this.InvokeAsync("Init", new object[0], this.InitOperationCompleted, userState);
        }
        
        private void OnInitOperationCompleted(object arg) {
            if ((this.InitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitCompleted(this, new InitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://1c.pozitivtelecom.ru#MobileAppPozitiv:GetAllowGroups", RequestNamespace="http://1c.pozitivtelecom.ru", ResponseNamespace="http://1c.pozitivtelecom.ru", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetAllowGroups() {
            object[] results = this.Invoke("GetAllowGroups", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllowGroupsAsync() {
            this.GetAllowGroupsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllowGroupsAsync(object userState) {
            if ((this.GetAllowGroupsOperationCompleted == null)) {
                this.GetAllowGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllowGroupsOperationCompleted);
            }
            this.InvokeAsync("GetAllowGroups", new object[0], this.GetAllowGroupsOperationCompleted, userState);
        }
        
        private void OnGetAllowGroupsOperationCompleted(object arg) {
            if ((this.GetAllowGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllowGroupsCompleted(this, new GetAllowGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://1c.pozitivtelecom.ru#MobileAppPozitiv:GetAllowElements", RequestNamespace="http://1c.pozitivtelecom.ru", ResponseNamespace="http://1c.pozitivtelecom.ru", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetAllowElements(string Ref) {
            object[] results = this.Invoke("GetAllowElements", new object[] {
                        Ref});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllowElementsAsync(string Ref) {
            this.GetAllowElementsAsync(Ref, null);
        }
        
        /// <remarks/>
        public void GetAllowElementsAsync(string Ref, object userState) {
            if ((this.GetAllowElementsOperationCompleted == null)) {
                this.GetAllowElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllowElementsOperationCompleted);
            }
            this.InvokeAsync("GetAllowElements", new object[] {
                        Ref}, this.GetAllowElementsOperationCompleted, userState);
        }
        
        private void OnGetAllowElementsOperationCompleted(object arg) {
            if ((this.GetAllowElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllowElementsCompleted(this, new GetAllowElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://1c.pozitivtelecom.ru#MobileAppPozitiv:GetDataList", RequestNamespace="http://1c.pozitivtelecom.ru", ResponseNamespace="http://1c.pozitivtelecom.ru", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetDataList(string Ref) {
            object[] results = this.Invoke("GetDataList", new object[] {
                        Ref});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataListAsync(string Ref) {
            this.GetDataListAsync(Ref, null);
        }
        
        /// <remarks/>
        public void GetDataListAsync(string Ref, object userState) {
            if ((this.GetDataListOperationCompleted == null)) {
                this.GetDataListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataListOperationCompleted);
            }
            this.InvokeAsync("GetDataList", new object[] {
                        Ref}, this.GetDataListOperationCompleted, userState);
        }
        
        private void OnGetDataListOperationCompleted(object arg) {
            if ((this.GetDataListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataListCompleted(this, new GetDataListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://1c.pozitivtelecom.ru#MobileAppPozitiv:GetDataByRef", RequestNamespace="http://1c.pozitivtelecom.ru", ResponseNamespace="http://1c.pozitivtelecom.ru", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetDataByRef(string RefListMod, string Ref) {
            object[] results = this.Invoke("GetDataByRef", new object[] {
                        RefListMod,
                        Ref});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataByRefAsync(string RefListMod, string Ref) {
            this.GetDataByRefAsync(RefListMod, Ref, null);
        }
        
        /// <remarks/>
        public void GetDataByRefAsync(string RefListMod, string Ref, object userState) {
            if ((this.GetDataByRefOperationCompleted == null)) {
                this.GetDataByRefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataByRefOperationCompleted);
            }
            this.InvokeAsync("GetDataByRef", new object[] {
                        RefListMod,
                        Ref}, this.GetDataByRefOperationCompleted, userState);
        }
        
        private void OnGetDataByRefOperationCompleted(object arg) {
            if ((this.GetDataByRefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataByRefCompleted(this, new GetDataByRefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://1c.pozitivtelecom.ru#MobileAppPozitiv:SetDataByRef", RequestNamespace="http://1c.pozitivtelecom.ru", ResponseNamespace="http://1c.pozitivtelecom.ru", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string SetDataByRef(string RefListMod, string Ref, string Data) {
            object[] results = this.Invoke("SetDataByRef", new object[] {
                        RefListMod,
                        Ref,
                        Data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetDataByRefAsync(string RefListMod, string Ref, string Data) {
            this.SetDataByRefAsync(RefListMod, Ref, Data, null);
        }
        
        /// <remarks/>
        public void SetDataByRefAsync(string RefListMod, string Ref, string Data, object userState) {
            if ((this.SetDataByRefOperationCompleted == null)) {
                this.SetDataByRefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDataByRefOperationCompleted);
            }
            this.InvokeAsync("SetDataByRef", new object[] {
                        RefListMod,
                        Ref,
                        Data}, this.SetDataByRefOperationCompleted, userState);
        }
        
        private void OnSetDataByRefOperationCompleted(object arg) {
            if ((this.SetDataByRefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDataByRefCompleted(this, new SetDataByRefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://1c.pozitivtelecom.ru#MobileAppPozitiv:InitApp", RequestNamespace="http://1c.pozitivtelecom.ru", ResponseNamespace="http://1c.pozitivtelecom.ru", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string InitApp(string Data) {
            object[] results = this.Invoke("InitApp", new object[] {
                        Data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InitAppAsync(string Data) {
            this.InitAppAsync(Data, null);
        }
        
        /// <remarks/>
        public void InitAppAsync(string Data, object userState) {
            if ((this.InitAppOperationCompleted == null)) {
                this.InitAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitAppOperationCompleted);
            }
            this.InvokeAsync("InitApp", new object[] {
                        Data}, this.InitAppOperationCompleted, userState);
        }
        
        private void OnInitAppOperationCompleted(object arg) {
            if ((this.InitAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitAppCompleted(this, new InitAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://1c.pozitivtelecom.ru#MobileAppPozitiv:GetPeriodicData", RequestNamespace="http://1c.pozitivtelecom.ru", ResponseNamespace="http://1c.pozitivtelecom.ru", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetPeriodicData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Data) {
            object[] results = this.Invoke("GetPeriodicData", new object[] {
                        Data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPeriodicDataAsync(string Data) {
            this.GetPeriodicDataAsync(Data, null);
        }
        
        /// <remarks/>
        public void GetPeriodicDataAsync(string Data, object userState) {
            if ((this.GetPeriodicDataOperationCompleted == null)) {
                this.GetPeriodicDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPeriodicDataOperationCompleted);
            }
            this.InvokeAsync("GetPeriodicData", new object[] {
                        Data}, this.GetPeriodicDataOperationCompleted, userState);
        }
        
        private void OnGetPeriodicDataOperationCompleted(object arg) {
            if ((this.GetPeriodicDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPeriodicDataCompleted(this, new GetPeriodicDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://1c.pozitivtelecom.ru#MobileAppPozitiv:GetNews", RequestNamespace="http://1c.pozitivtelecom.ru", ResponseNamespace="http://1c.pozitivtelecom.ru", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetNews() {
            object[] results = this.Invoke("GetNews", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsAsync() {
            this.GetNewsAsync(null);
        }
        
        /// <remarks/>
        public void GetNewsAsync(object userState) {
            if ((this.GetNewsOperationCompleted == null)) {
                this.GetNewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsOperationCompleted);
            }
            this.InvokeAsync("GetNews", new object[0], this.GetNewsOperationCompleted, userState);
        }
        
        private void OnGetNewsOperationCompleted(object arg) {
            if ((this.GetNewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsCompleted(this, new GetNewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://1c.pozitivtelecom.ru#MobileAppPozitiv:GetGroups", RequestNamespace="http://1c.pozitivtelecom.ru", ResponseNamespace="http://1c.pozitivtelecom.ru", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetGroups() {
            object[] results = this.Invoke("GetGroups", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupsAsync() {
            this.GetGroupsAsync(null);
        }
        
        /// <remarks/>
        public void GetGroupsAsync(object userState) {
            if ((this.GetGroupsOperationCompleted == null)) {
                this.GetGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupsOperationCompleted);
            }
            this.InvokeAsync("GetGroups", new object[0], this.GetGroupsOperationCompleted, userState);
        }
        
        private void OnGetGroupsOperationCompleted(object arg) {
            if ((this.GetGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupsCompleted(this, new GetGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://1c.pozitivtelecom.ru#MobileAppPozitiv:GetElements", RequestNamespace="http://1c.pozitivtelecom.ru", ResponseNamespace="http://1c.pozitivtelecom.ru", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetElements(string Ref) {
            object[] results = this.Invoke("GetElements", new object[] {
                        Ref});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetElementsAsync(string Ref) {
            this.GetElementsAsync(Ref, null);
        }
        
        /// <remarks/>
        public void GetElementsAsync(string Ref, object userState) {
            if ((this.GetElementsOperationCompleted == null)) {
                this.GetElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetElementsOperationCompleted);
            }
            this.InvokeAsync("GetElements", new object[] {
                        Ref}, this.GetElementsOperationCompleted, userState);
        }
        
        private void OnGetElementsOperationCompleted(object arg) {
            if ((this.GetElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetElementsCompleted(this, new GetElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://1c.pozitivtelecom.ru#MobileAppPozitiv:GetList", RequestNamespace="http://1c.pozitivtelecom.ru", ResponseNamespace="http://1c.pozitivtelecom.ru", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetList(string Ref, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string SessionPar) {
            object[] results = this.Invoke("GetList", new object[] {
                        Ref,
                        SessionPar});
            return ((string)(results[0]));
        }


        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://1c.pozitivtelecom.ru#MobileAppPozitiv:GetParentList", RequestNamespace = "http://1c.pozitivtelecom.ru", ResponseNamespace = "http://1c.pozitivtelecom.ru", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetParentList(string Ref, string ParentRef, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string SessionPar)
        {
            object[] results = this.Invoke("GetParentList", new object[] {
                        Ref,
                        ParentRef,
                        SessionPar});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetListAsync(string Ref, string SessionPar) {
            this.GetListAsync(Ref, SessionPar, null);
        }
        
        /// <remarks/>
        public void GetListAsync(string Ref, string SessionPar, object userState) {
            if ((this.GetListOperationCompleted == null)) {
                this.GetListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListOperationCompleted);
            }
            this.InvokeAsync("GetList", new object[] {
                        Ref,
                        SessionPar}, this.GetListOperationCompleted, userState);
        }
        
        private void OnGetListOperationCompleted(object arg) {
            if ((this.GetListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListCompleted(this, new GetListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://1c.pozitivtelecom.ru#MobileAppPozitiv:GetData", RequestNamespace="http://1c.pozitivtelecom.ru", ResponseNamespace="http://1c.pozitivtelecom.ru", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetData(string RefListMod, string Ref, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string SessionPar) {
            object[] results = this.Invoke("GetData", new object[] {
                        RefListMod,
                        Ref,
                        SessionPar});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync(string RefListMod, string Ref, string SessionPar) {
            this.GetDataAsync(RefListMod, Ref, SessionPar, null);
        }
        
        /// <remarks/>
        public void GetDataAsync(string RefListMod, string Ref, string SessionPar, object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[] {
                        RefListMod,
                        Ref,
                        SessionPar}, this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://1c.pozitivtelecom.ru#MobileAppPozitiv:SetData", RequestNamespace="http://1c.pozitivtelecom.ru", ResponseNamespace="http://1c.pozitivtelecom.ru", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string SetData(string RefListMod, string Ref, string Data, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string SessionPar) {
            object[] results = this.Invoke("SetData", new object[] {
                        RefListMod,
                        Ref,
                        Data,
                        SessionPar});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetDataAsync(string RefListMod, string Ref, string Data, string SessionPar) {
            this.SetDataAsync(RefListMod, Ref, Data, SessionPar, null);
        }
        
        /// <remarks/>
        public void SetDataAsync(string RefListMod, string Ref, string Data, string SessionPar, object userState) {
            if ((this.SetDataOperationCompleted == null)) {
                this.SetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDataOperationCompleted);
            }
            this.InvokeAsync("SetData", new object[] {
                        RefListMod,
                        Ref,
                        Data,
                        SessionPar}, this.SetDataOperationCompleted, userState);
        }
        
        private void OnSetDataOperationCompleted(object arg) {
            if ((this.SetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDataCompleted(this, new SetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://1c.pozitivtelecom.ru#MobileAppPozitiv:GetFile", RequestNamespace="http://1c.pozitivtelecom.ru", ResponseNamespace="http://1c.pozitivtelecom.ru", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetFile(string Ref) {
            object[] results = this.Invoke("GetFile", new object[] {
                        Ref});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileAsync(string Ref) {
            this.GetFileAsync(Ref, null);
        }
        
        /// <remarks/>
        public void GetFileAsync(string Ref, object userState) {
            if ((this.GetFileOperationCompleted == null)) {
                this.GetFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileOperationCompleted);
            }
            this.InvokeAsync("GetFile", new object[] {
                        Ref}, this.GetFileOperationCompleted, userState);
        }
        
        private void OnGetFileOperationCompleted(object arg) {
            if ((this.GetFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileCompleted(this, new GetFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://1c.pozitivtelecom.ru#MobileAppPozitiv:SetFile", RequestNamespace="http://1c.pozitivtelecom.ru", ResponseNamespace="http://1c.pozitivtelecom.ru", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string SetFile(string Data) {
            object[] results = this.Invoke("SetFile", new object[] {
                        Data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetFileAsync(string Data) {
            this.SetFileAsync(Data, null);
        }
        
        /// <remarks/>
        public void SetFileAsync(string Data, object userState) {
            if ((this.SetFileOperationCompleted == null)) {
                this.SetFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetFileOperationCompleted);
            }
            this.InvokeAsync("SetFile", new object[] {
                        Data}, this.SetFileOperationCompleted, userState);
        }
        
        private void OnSetFileOperationCompleted(object arg) {
            if ((this.SetFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetFileCompleted(this, new SetFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://1c.pozitivtelecom.ru#MobileAppPozitiv:GetMessage", RequestNamespace="http://1c.pozitivtelecom.ru", ResponseNamespace="http://1c.pozitivtelecom.ru", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetMessage([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Data) {
            object[] results = this.Invoke("GetMessage", new object[] {
                        Data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageAsync(string Data) {
            this.GetMessageAsync(Data, null);
        }
        
        /// <remarks/>
        public void GetMessageAsync(string Data, object userState) {
            if ((this.GetMessageOperationCompleted == null)) {
                this.GetMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageOperationCompleted);
            }
            this.InvokeAsync("GetMessage", new object[] {
                        Data}, this.GetMessageOperationCompleted, userState);
        }
        
        private void OnGetMessageOperationCompleted(object arg) {
            if ((this.GetMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageCompleted(this, new GetMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://1c.pozitivtelecom.ru#MobileAppPozitiv:SetMessage", RequestNamespace="http://1c.pozitivtelecom.ru", ResponseNamespace="http://1c.pozitivtelecom.ru", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string SetMessage(string Data) {
            object[] results = this.Invoke("SetMessage", new object[] {
                        Data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetMessageAsync(string Data) {
            this.SetMessageAsync(Data, null);
        }
        
        /// <remarks/>
        public void SetMessageAsync(string Data, object userState) {
            if ((this.SetMessageOperationCompleted == null)) {
                this.SetMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMessageOperationCompleted);
            }
            this.InvokeAsync("SetMessage", new object[] {
                        Data}, this.SetMessageOperationCompleted, userState);
        }
        
        private void OnSetMessageOperationCompleted(object arg) {
            if ((this.SetMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMessageCompleted(this, new SetMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void InitCompletedEventHandler(object sender, InitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAllowGroupsCompletedEventHandler(object sender, GetAllowGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllowGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllowGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAllowElementsCompletedEventHandler(object sender, GetAllowElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllowElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllowElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetDataListCompletedEventHandler(object sender, GetDataListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetDataByRefCompletedEventHandler(object sender, GetDataByRefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataByRefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataByRefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SetDataByRefCompletedEventHandler(object sender, SetDataByRefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDataByRefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDataByRefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void InitAppCompletedEventHandler(object sender, InitAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetPeriodicDataCompletedEventHandler(object sender, GetPeriodicDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPeriodicDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPeriodicDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetNewsCompletedEventHandler(object sender, GetNewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetGroupsCompletedEventHandler(object sender, GetGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetElementsCompletedEventHandler(object sender, GetElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetListCompletedEventHandler(object sender, GetListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SetDataCompletedEventHandler(object sender, SetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetFileCompletedEventHandler(object sender, GetFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SetFileCompletedEventHandler(object sender, SetFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetMessageCompletedEventHandler(object sender, GetMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SetMessageCompletedEventHandler(object sender, SetMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591